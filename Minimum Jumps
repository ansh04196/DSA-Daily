 
class Solution {
  public:
    int minJumps(vector<int>& arr) {
        int n = arr.size();
         if (n <= 1)
            return 0;

         if (arr[0] == 0)
            return -1;

        // initialization
        int maxReach =
            arr[0];        // stores all time the maximal reachable index in the array.
        int step = arr[0]; // stores the number of steps we can still take
        int jump = 1;       

        // Start traversing array
        int i = 1;
        for (i = 1; i < n; i++) {
             if (i == n - 1)
                return jump;

             maxReach = max(maxReach, i + arr[i]);

             step--;

             if (step == 0) {
                // we must have used a jump
                jump++;
 
                if (i >= maxReach)
                    return -1;
 
                step = maxReach - i;
            }
        }

        return -1;
    }
};
