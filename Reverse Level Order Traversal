static void
addNodesToMap(Node* node, int level,
              unordered_map<int, vector<int> >& nodeMap)
{
    if (node == nullptr) {
        return;
    }
     
    nodeMap[level].push_back(node->data);
     
    addNodesToMap(node->left, level + 1, nodeMap);
    addNodesToMap(node->right, level + 1, nodeMap);
}

vector<int> reverseLevelOrder(Node* root)
{
     
    vector<int> result;
     
    unordered_map<int, vector<int> > nodeMap;
     
    addNodesToMap(root, 0, nodeMap);
   
    for (int level = nodeMap.size() - 1; level >= 0;
         level--) {
        vector<int>& nodesAtLevel = nodeMap[level];
        for (int i = 0; i < nodesAtLevel.size(); i++) {
            result.push_back(nodesAtLevel[i]);
        }
    }
    return result;
}
