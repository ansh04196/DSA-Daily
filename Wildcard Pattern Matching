class Solution {
  public:
    
    int wildCard(string pattern, string str) {
        bool isFirst = true;
        int trueVal = pattern.length();
        int dp[str.length() + 1][trueVal + 1];

       
        memset(dp, 0, sizeof dp);

       
        dp[0][0] = true;

       
        for (int i = 1; i <= pattern.length(); i++)
            if (pattern[i - 1] == '*')
                dp[0][i] = dp[0][i - 1];

        
        if (trueVal > 0 and pattern[0] == '*')
            dp[0][1] = 1;

         for (int i = 1; i <= str.length(); i++) {
            for (int j = 1; j <= trueVal; j++) {
               
                if (pattern[j - 1] == '?' or pattern[j - 1] == str[i - 1])
                    dp[i][j] = dp[i - 1][j - 1];

                
                else if (pattern[j - 1] == '*')
                    dp[i][j] = dp[i - 1][j] || dp[i][j - 1];

                
                else
                    dp[i][j] = 0;
            }
        }

         
        return dp[str.length()][trueVal];
    }
};
